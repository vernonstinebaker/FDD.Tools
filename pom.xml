<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.sourceforge</groupId>
    <artifactId>FDDTools</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
    <fddtools.app.name>FDD Tools</fddtools.app.name>
    <fddtools.bundle.id>net.sourceforge.fddtools</fddtools.bundle.id>
    <!-- jpackage requires numeric dotted version (1-3 ints). Derive from project.version stripping -SNAPSHOT -->
    <fddtools.app.version>${project.version}</fddtools.app.version>
    </properties>

    <dependencies>
        <!-- JavaFX dependencies -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>21</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>21</version>
        </dependency>
        
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>5.7.1</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>4.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>4.0.0</version>
        </dependency>
        
        <!-- FontAwesome icons for better UI -->
        <dependency>
            <groupId>de.jensd</groupId>
            <artifactId>fontawesomefx-fontawesome</artifactId>
            <version>4.7.0-9.1.2</version>
        </dependency>
        <dependency>
            <groupId>de.jensd</groupId>
            <artifactId>fontawesomefx-commons</artifactId>
            <version>9.1.2</version>
        </dependency>

        <!-- Logging (SLF4J API + Logback); bridge can be added later -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.13</version>
        </dependency>
        <!-- Bridge java.util.logging to SLF4J so legacy loggers flow into Logback -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>2.0.13</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.5.6</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.10.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- Surefire for JUnit 5 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <useModulePath>false</useModulePath>
                </configuration>
            </plugin>

            <!-- JavaFX Maven Plugin -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <mainClass>net.sourceforge.fddtools.FDDApplicationFX</mainClass>
                    <commandlineArgs>
                        <commandlineArg>--add-opens=java.base/java.lang=ALL-UNNAMED</commandlineArg>
                    </commandlineArgs>
                </configuration>
            </plugin>

            <!-- Maven Shade Plugin for creating fat JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>net.sourceforge.fddtools.FDDApplicationFX</mainClass>
                                    <manifestEntries>
                                        <Implementation-Title>FDD Tools</Implementation-Title>
                                        <Implementation-Version>${project.version}</Implementation-Version>
                                        <Application-Name>FDD Tools</Application-Name>
                                        <Bundle-Name>FDD Tools</Bundle-Name>
                                        <Application-Title>FDD Tools</Application-Title>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>

    <profiles>
        <profile>
            <id>macos-app-image</id>
            <activation>
                <os><family>mac</family></os>
            </activation>
            <properties>
                <!-- If the base version contains SNAPSHOT, fall back to 1.0.0 for jpackage compliance -->
                <fddtools.app.version>1.0.0</fddtools.app.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>cleanup-old-app-image</id>
                                <phase>prepare-package</phase>
                                <goals><goal>exec</goal></goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>-c</argument>
                                        <argument>rm -rf "${project.build.directory}/dist/macos/${fddtools.app.name}.app" "${project.build.directory}/dist/macos/app-image/${fddtools.app.name}.app" "${project.build.directory}/dist/macos"/*.dmg</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>print-packaging-config</id>
                                <phase>prepare-package</phase>
                                <goals><goal>exec</goal></goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>-c</argument>
                                        <argument>echo "[packaging] appName=${fddtools.app.name} bundleId=${fddtools.bundle.id} version=${fddtools.app.version} skipDmg=${skipDmg}"</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jpackage-app-image</id>
                                <phase>package</phase>
                                <goals><goal>exec</goal></goals>
                                <configuration>
                                    <executable>jpackage</executable>
                                    <arguments>
                                        <argument>--type</argument><argument>app-image</argument>
                                        <argument>--input</argument><argument>${project.build.directory}</argument>
                                        <argument>--main-jar</argument><argument>${project.build.finalName}.jar</argument>
                                        <argument>--main-class</argument><argument>net.sourceforge.fddtools.FDDApplicationFX</argument>
                                        <argument>--name</argument><argument>${fddtools.app.name}</argument>
                                        <argument>--icon</argument><argument>${project.basedir}/src/main/resources/FDDTools.icns</argument>
                                        <argument>--app-version</argument><argument>${fddtools.app.version}</argument>
                                        <argument>--vendor</argument><argument>FDD Tools Project</argument>
                                        <argument>--dest</argument><argument>${project.build.directory}/dist/macos/app-image</argument>
                                        <argument>--mac-package-identifier</argument><argument>${fddtools.bundle.id}</argument>
                                        <argument>--mac-package-name</argument><argument>${fddtools.app.name}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                                                        <execution>
                                                                <id>normalize-launcher-name</id>
                                                                <phase>package</phase>
                                                                <goals><goal>exec</goal></goals>
                                                                <configuration>
                                                                        <executable>bash</executable>
                                                                        <arguments>
                                                                                <argument>-c</argument>
                                                                                <argument><![CDATA[
APP_NAME="${fddtools.app.name}"; APP_DIR="${project.build.directory}/dist/macos/app-image/${fddtools.app.name}.app";
if [ -d "$APP_DIR" ]; then 
    NOSPACE=$(echo "$APP_NAME" | tr -d ' ');
    if [ "$NOSPACE" != "$APP_NAME" ]; then 
        SRC_L="$APP_DIR/Contents/MacOS/$APP_NAME"; DST_L="$APP_DIR/Contents/MacOS/$NOSPACE";
        if [ -f "$SRC_L" ]; then mv "$SRC_L" "$DST_L" && chmod +x "$DST_L"; fi;
        /usr/libexec/PlistBuddy -c "Set :CFBundleExecutable $NOSPACE" "$APP_DIR/Contents/Info.plist" || true;
        SRC_C="$APP_DIR/Contents/app/$APP_NAME.cfg"; DST_C="$APP_DIR/Contents/app/$NOSPACE.cfg";
        if [ -f "$SRC_C" ]; then mv "$SRC_C" "$DST_C"; fi;
        echo "[normalize] CFBundleExecutable set to $NOSPACE";
    fi;
fi;
]]></argument>
                                                                        </arguments>
                                                                </configuration>
                                                        </execution>
                            <execution>
                                <id>jpackage-dmg</id>
                                <phase>package</phase>
                                <goals><goal>exec</goal></goals>
                                <configuration>
                                    <skip>${skipDmg}</skip>
                                    <executable>jpackage</executable>
                                    <arguments>
                                        <argument>--type</argument><argument>dmg</argument>
                                        <argument>--input</argument><argument>${project.build.directory}</argument>
                                        <argument>--main-jar</argument><argument>${project.build.finalName}.jar</argument>
                                        <argument>--main-class</argument><argument>net.sourceforge.fddtools.FDDApplicationFX</argument>
                                        <argument>--name</argument><argument>${fddtools.app.name}</argument>
                                        <argument>--icon</argument><argument>${project.basedir}/src/main/resources/FDDTools.icns</argument>
                                        <argument>--app-version</argument><argument>${fddtools.app.version}</argument>
                                        <argument>--vendor</argument><argument>FDD Tools Project</argument>
                                        <argument>--dest</argument><argument>${project.build.directory}/dist/macos</argument>
                                        <argument>--mac-package-identifier</argument><argument>${fddtools.bundle.id}</argument>
                                        <argument>--mac-package-name</argument><argument>${fddtools.app.name}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>macos-icon-gen</id>
            <activation>
                <os><family>mac</family></os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>generate-icns</id>
                                <phase>generate-resources</phase>
                                <goals><goal>exec</goal></goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>-c</argument>
                                        <argument><![CDATA[set -e; ICONSET=target/icon-build/FDDTools.iconset; rm -rf "$ICONSET"; mkdir -p "$ICONSET"; \
cp src/main/resources/FDDTools-16.png "$ICONSET"/icon_16x16.png; \
cp src/main/resources/FDDTools-32.png "$ICONSET"/icon_16x16@2x.png; \
cp src/main/resources/FDDTools-32.png "$ICONSET"/icon_32x32.png; \
cp src/main/resources/FDDTools-64.png "$ICONSET"/icon_32x32@2x.png; \
cp src/main/resources/FDDTools-64.png "$ICONSET"/icon_64x64.png; \
cp src/main/resources/FDDTools-128.png "$ICONSET"/icon_64x64@2x.png || true; \
cp src/main/resources/FDDTools-128.png "$ICONSET"/icon_128x128.png; \
cp src/main/resources/FDDTools.png "$ICONSET"/icon_256x256.png || true; \
sips -z 256 256 src/main/resources/FDDTools-128.png --out "$ICONSET"/icon_128x128@2x.png >/dev/null 2>&1 || true; \
iconutil -c icns "$ICONSET" -o src/main/resources/FDDTools.icns; \
echo "[icon-gen] Regenerated FDDTools.icns"]]></argument>
                                    </arguments>
                                    <skip>${skipIconGen}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>macos-sign</id>
            <activation>
                <os><family>mac</family></os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>codesign-app</id>
                                <phase>verify</phase>
                                <goals><goal>exec</goal></goals>
                                <configuration>
                                    <skip>${skipSign}</skip>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>-c</argument>
                                        <argument>if [ -n "$CODE_SIGN_IDENTITY" ]; then echo "[codesign] Signing app with $CODE_SIGN_IDENTITY"; codesign --force --deep --sign "$CODE_SIGN_IDENTITY" --timestamp "${project.build.directory}/dist/macos/app-image/${fddtools.app.name}.app" || exit 1; else echo "[codesign] CODE_SIGN_IDENTITY not set; skipping"; fi</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>