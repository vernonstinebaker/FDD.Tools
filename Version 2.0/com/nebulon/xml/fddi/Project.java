//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.05.11 at 08:52:34 PM CST 
//
package com.nebulon.xml.fddi;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Enumeration;
import java.util.List;
import javax.swing.tree.MutableTreeNode;
import javax.swing.tree.TreeNode;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import net.sourceforge.fddtools.model.FDDINode;

/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element ref="{http://www.nebulon.com/xml/2004/fddi}aspect" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.nebulon.com/xml/2004/fddi}progress" minOccurs="0"/>
 *         &lt;any/>
 *       &lt;/sequence>
 *       &lt;attGroup ref="{http://www.nebulon.com/xml/2004/fddi}baseAttrs"/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder =
{
    "name",
    "aspect",
    "progress",
    "any"
})
@XmlRootElement(name = "project")
public class Project extends FDDINode
{

    @XmlElement(namespace = "http://www.nebulon.com/xml/2004/fddi")
    protected List<Aspect> aspect;

    /**
     * Gets the value of the aspect property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the aspect property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAspect().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Aspect }
     * 
     * 
     */
    public List<Aspect> getAspect()
    {
        if(aspect == null)
        {
            aspect = new ArrayList<Aspect>();
        }
        return this.aspect;
    }

    public void add(List children)
    {
        for(Object child : children)
            ((Aspect) child).setParent(this);
        getAspect().add((Aspect) children);
    }

    public void add(FDDINode child)
    {
        ((Aspect) child).setParent(this);
        getAspect().add((Aspect) child);
    }

    public void insert(MutableTreeNode node, int index)
    {
        ((Aspect) node).setParent(this);
        aspect.add(index, (Aspect) node);
    }

    public void remove(int index)
    {
        aspect.remove(index);
    }

    public void remove(MutableTreeNode node)
    {
        aspect.remove((Aspect)node);
    }

    public void setUserObject(Object arg0)
    {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public TreeNode getChildAt(int index)
    {
        return aspect.get(index);
    }

    public int getChildCount()
    {
        if(aspect != null)
            return aspect.size();
        else
            return 0;
    }

    public int getIndex(TreeNode node)
    {
        return aspect.indexOf(node);
    }

    public boolean getAllowsChildren()
    {
        return true;
    }

    public boolean isLeaf()
    {
        return (aspect != null && (aspect.size() <= 0));
    }

    public Enumeration children()
    {
        if(aspect != null)
            return Collections.enumeration(aspect);
        else
            return null;
    }
}
