/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AspectPanel.java
 *
 * Created on May 19, 2009, 8:23:27 PM
 */
package net.sourceforge.fddtools.ui;

import com.nebulon.xml.fddi.Aspect;
import com.nebulon.xml.fddi.MilestoneInfo;
import com.nebulon.xml.fddi.ObjectFactory;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigInteger;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;

/**
 *
 * @author vds
 */
public class AspectInfoPanel extends JPanel
{

    private Aspect aspect = null;
    private JPopupMenu tableEditMenu = null;

    /** Creates new form AspectPanel */
    public AspectInfoPanel(Aspect aspect)
    {
        this.aspect = aspect;

        initComponents();

    }
    
    ActionListener addMilestoneListener = new ActionListener()
    {

        public void actionPerformed(final ActionEvent e)
        {
            ObjectFactory of = new ObjectFactory();
            MilestoneInfo mi = of.createMilestoneInfo();
            mi.setName("Edit this name.");
            mi.setEffort(BigInteger.ZERO);
            boolean add = aspect.getInfo().getMilestoneInfo().add(mi);
            AspectInfoPanel.this.updateUI();
        }
    };
    ActionListener insertMilestoneListener = new ActionListener()
    {

        public void actionPerformed(final ActionEvent e)
        {
            ObjectFactory of = new ObjectFactory();
            MilestoneInfo mi = of.createMilestoneInfo();
            mi.setName("Edit this name.");
            mi.setEffort(BigInteger.ZERO);
            int index = milestoneInfoTable.getSelectedRow();
            aspect.getInfo().getMilestoneInfo().add(index, mi);
            AspectInfoPanel.this.updateUI();
        }
    };
    ActionListener deleteMilestoneListener = new ActionListener()
    {

        public void actionPerformed(final ActionEvent e)
        {
            int index = milestoneInfoTable.getSelectedRow();
            aspect.getInfo().getMilestoneInfo().remove(index);
            AspectInfoPanel.this.updateUI();
        }
    };

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        aspectInfo1 = aspect.getInfo();
        subjectNameLabel = new javax.swing.JLabel();
        activityNameLabel = new javax.swing.JLabel();
        featureNameLabel = new javax.swing.JLabel();
        milestoneNameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        milestoneInfoTable = new javax.swing.JTable();
        subjectNameTextField = new javax.swing.JTextField();
        activityNameTextField = new javax.swing.JTextField();
        featureNameTextField = new javax.swing.JTextField();
        milestoneNameTextField = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Aspect Information", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        subjectNameLabel.setText("Subject:");

        activityNameLabel.setText("Activity:");

        featureNameLabel.setText("Feature:");

        milestoneNameLabel.setText("Milestone:");

        milestoneInfoTable.setColumnSelectionAllowed(true);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${milestoneInfo}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, aspectInfo1, eLProperty, milestoneInfoTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${effort}"));
        columnBinding.setColumnName("Effort");
        columnBinding.setColumnClass(java.math.BigInteger.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        milestoneInfoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                milestoneInfoTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(milestoneInfoTable);
        milestoneInfoTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, aspectInfo1, org.jdesktop.beansbinding.ELProperty.create("${subjectName}"), subjectNameTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        subjectNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectNameTextFieldActionPerformed(evt);
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, aspectInfo1, org.jdesktop.beansbinding.ELProperty.create("${activityName}"), activityNameTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, aspectInfo1, org.jdesktop.beansbinding.ELProperty.create("${featureName}"), featureNameTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        featureNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                featureNameTextFieldActionPerformed(evt);
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, aspectInfo1, org.jdesktop.beansbinding.ELProperty.create("${milestoneName}"), milestoneNameTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subjectNameLabel)
                            .addComponent(featureNameLabel)
                            .addComponent(milestoneNameLabel)
                            .addComponent(activityNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(activityNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                            .addComponent(featureNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                            .addComponent(milestoneNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                            .addComponent(subjectNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectNameLabel)
                    .addComponent(subjectNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activityNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(activityNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(featureNameLabel)
                    .addComponent(featureNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(milestoneNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(milestoneNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void featureNameTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_featureNameTextFieldActionPerformed
    {//GEN-HEADEREND:event_featureNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_featureNameTextFieldActionPerformed

    private void subjectNameTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_subjectNameTextFieldActionPerformed
    {//GEN-HEADEREND:event_subjectNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subjectNameTextFieldActionPerformed

    private void milestoneInfoTableMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_milestoneInfoTableMouseClicked
    {//GEN-HEADEREND:event_milestoneInfoTableMouseClicked

        if(SwingUtilities.isRightMouseButton(evt))
        {
            /*
            try
            {
                Robot robot = new Robot();
                robot.mousePress(InputEvent.BUTTON1_MASK);
                robot.mouseRelease(InputEvent.BUTTON1_MASK);
            }
            catch(AWTException ae)
            {
                System.out.println(ae);
            }
            */
            tableEditMenu = new JPopupMenu("Edit Menu");
            JMenuItem addItem = new JMenuItem("Add New Milestone (at end of list)");
            JMenuItem insertItem = new JMenuItem("Insert New Milestone (above this location)");
            JMenuItem deleteItem = new JMenuItem("Delete this Milestone");
            tableEditMenu.add(addItem);
            tableEditMenu.add(insertItem);
            tableEditMenu.add(deleteItem);
            addItem.addActionListener(addMilestoneListener);
            insertItem.addActionListener(insertMilestoneListener);
            deleteItem.addActionListener(deleteMilestoneListener);
            tableEditMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_milestoneInfoTableMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel activityNameLabel;
    private javax.swing.JTextField activityNameTextField;
    private com.nebulon.xml.fddi.AspectInfo aspectInfo1;
    private javax.swing.JLabel featureNameLabel;
    private javax.swing.JTextField featureNameTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable milestoneInfoTable;
    private javax.swing.JLabel milestoneNameLabel;
    private javax.swing.JTextField milestoneNameTextField;
    private javax.swing.JLabel subjectNameLabel;
    private javax.swing.JTextField subjectNameTextField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
